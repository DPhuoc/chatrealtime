{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","Context/AuthProvider.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/UserInfo.js","components/ChatRoom/RoomList.js","components/ChatRoom/Sidebar.js","components/ChatRoom/Message.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","window","location","hostname","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","fbProvider","FacebookAuthProvider","googleProvider","GoogleAuthProvider","Login","handleLogin","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","keywords","toLowerCase","justify","style","height","span","textAlign","level","width","marginBottom","onClick","AuthContext","React","createContext","AuthProvider","children","useState","setUser","history","useHistory","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","Provider","value","position","inset","useFirestore","condition","documents","setDocuments","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","usersCondition","members","clearState","WrapperStyled","styled","div","UserInfo","src","charAt","toUpperCase","Text","className","ghost","signOut","Panel","Collapse","PanelStyled","LinkStyled","Link","RoomList","defaultActiveKey","header","type","icon","PlusSquareOutlined","SidebarStyled","Sidebar","formatDate","seconds","formattedDate","formatRelative","Date","slice","Message","text","size","HeaderStyled","ButtonGroupStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form","inputRef","useRef","messageListRef","handleOnSubmit","roomId","resetFields","current","setTimeout","focus","messages","scrollTop","scrollHeight","description","UserAddOutlined","Group","maxCount","member","title","ref","mes","Item","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","message","showIcon","margin","closable","ChatRoom","AddRoomModal","visible","onOk","getFieldsValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","includes","InviteMemberModal","setValue","update","val","destroyOnClose","mode","newValue","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8RAgBAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAIjBR,IAASS,YAET,IAAMC,EAAOV,IAASU,OAChBC,EAAKX,IAASY,YAEhBC,OAAOC,SAASC,SAMLf,QAAf,E,gBC1BagB,EAAc,SAACC,EAAYC,GACxBP,EAAGM,WAAWA,GAEtBE,IAAN,2BACKD,GADL,IAEEE,UAAWpB,EAASY,UAAUS,WAAWC,sBAKhCC,EAAmB,SAACC,GAgB/B,IAbA,IAAMC,EAAOD,EAAYE,MAAM,KAAKC,QAAO,SAACC,GAAD,OAAUA,KAE/CC,EAASJ,EAAKI,OAChBC,EAAY,GACZC,EAAS,GACTC,EAAc,GAQTC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,EAAUG,IAAK,EAoCjB,OAvBA,SAASC,EAAgBC,GACvB,IAAK,IAAIF,EAAI,EAAGA,EAAIJ,EAAQI,IACrBH,EAAUG,KACbH,EAAUG,IAAK,EACfF,EAAOI,GAAKV,EAAKQ,GAEbE,IAAMN,EAAS,GACjBG,EAAYI,KAAKL,EAAOM,KAAK,MAG/BH,EAAgBC,EAAI,GACpBL,EAAUG,IAAK,GAKrBC,CAAgB,GAECF,EAAYM,QAAO,SAACC,EAAKC,GACxC,IAAMC,EA7Be,SAAChB,GACtB,IAAMiB,EAAU,GACZC,EAAU,GAKd,OAJAlB,EAAKC,MAAM,IAAIkB,SAAQ,SAACC,GACtBF,GAAWE,EACXH,EAAQN,KAAKO,MAERD,EAsBOI,CAAeN,GAC7B,MAAM,GAAN,mBAAWD,GAAX,YAAmBE,MAClB,K,OC1DGM,EAAUC,IAAVD,MAEFE,EAAa,IAAIjD,EAASU,KAAKwC,qBAC/BC,EAAiB,IAAInD,EAASU,KAAK0C,mBAE1B,SAASC,IACtB,IAAMC,EAAW,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACyB9C,EAAK+C,gBAAgBF,GAD9C,gBACVG,EADU,EACVA,mBAAoBC,EADV,EACUA,MAE5B,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAoBE,YACtB5C,EAAY,QAAS,CACnBQ,YAAamC,EAAKnC,YAClBqC,MAAOF,EAAKE,MACZC,SAAUH,EAAKG,SACfC,IAAKJ,EAAKI,IACVC,WAAYN,EAAmBM,WAC/BC,SAAU1C,EAAgB,UAACoC,EAAKnC,mBAAN,aAAC,EAAkB0C,iBAV/B,2CAAH,sDAejB,OACE,8BACE,cAAC,IAAD,CAAKC,QAAQ,SAASC,MAAO,CAAEC,OAAQ,KAAvC,SACE,eAAC,IAAD,CAAKC,KAAM,EAAX,UACE,cAACvB,EAAD,CAAOqB,MAAO,CAAEG,UAAW,UAAYC,MAAO,EAA9C,sBAGA,cAAC,IAAD,CACEJ,MAAO,CAAEK,MAAO,OAAQC,aAAc,GACtCC,QAAS,kBAAMrB,EAAYH,IAF7B,uDAMA,cAAC,IAAD,CACEiB,MAAO,CAAEK,MAAO,QAChBE,QAAS,kBAAMrB,EAAYL,IAF7B,gE,+DClCG2B,EAAcC,IAAMC,gBAElB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,EAAwBC,mBAAS,IAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACMC,EAAUC,cAChB,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KA6BA,OA3BAT,IAAMU,WAAU,WACd,IAAMC,EAAc9E,EAAK+E,oBAAmB,SAAC9B,GAC3C,GAAIA,EAAM,CACR,IAAQnC,EAAsCmC,EAAtCnC,YAAaqC,EAAyBF,EAAzBE,MAAOE,EAAkBJ,EAAlBI,IAAKD,EAAaH,EAAbG,SASjC,OARAoB,EAAQ,CACN1D,cACAqC,QACAE,MACAD,aAEFwB,GAAa,QACbH,EAAQ/C,KAAK,KAKf8C,EAAQ,IACRI,GAAa,GACbH,EAAQ/C,KAAK,aAIf,OAAO,WACLoD,OAED,CAACL,IAGF,cAACP,EAAYc,SAAb,CAAsBC,MAAO,CAAEhC,QAA/B,SACG0B,EAAY,cAAC,IAAD,CAAMjB,MAAO,CAAEwB,SAAU,QAASC,MAAO,KAAUb,ICtCtE,I,EA2Cec,EA3CM,SAAC7E,EAAY8E,GAChC,MAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KAuCA,OArCApB,IAAMU,WAAU,WACd,IAAIW,EAAgBvF,EAAGM,WAAWA,GAAYkF,QAAQ,aACtD,GAAIJ,EAAW,CACb,IAAKA,EAAUK,eAAiBL,EAAUK,aAAavE,OAGrD,YADAoE,EAAa,IAafC,EAAgBA,EAAcG,MAC5BN,EAAUO,UACVP,EAAUQ,SACVR,EAAUK,cAad,OAToBF,EAAcM,YAAW,SAACC,GAC5C,IAAMT,EAAYS,EAASC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAChCA,EAAI1F,QAD2B,IAElC2F,GAAID,EAAIC,QAGVZ,EAAaD,QAId,CAAC/E,EAAY8E,IAETC,GCvCIc,EAAajC,IAAMC,gBAEjB,SAASiC,EAAT,GAAoC,IAAb/B,EAAY,EAAZA,SACpC,EAAgDC,oBAAS,GAAzD,mBAAO+B,EAAP,KAAyBC,EAAzB,KACA,EAA0DhC,oBAAS,GAAnE,mBAAOiC,EAAP,KAA8BC,EAA9B,KACA,EAA4ClC,mBAAS,IAArD,mBAAOmC,EAAP,KAAuBC,EAAvB,KAGUtD,EACNc,IAAMyC,WAAW1C,GADnBjB,KAAQI,IAGJwD,EAAiB1C,IAAM2C,SAAQ,WACnC,MAAO,CACLlB,UAAW,UACXC,SAAU,iBACVH,aAAcrC,KAEf,CAACA,IAEE0D,EAAQ3B,EAAa,QAASyB,GAE9BG,EAAe7C,IAAM2C,SACzB,kBAAMC,EAAME,MAAK,SAACC,GAAD,OAAUA,EAAKf,KAAOO,MAAmB,KAC1D,CAACK,EAAOL,IAGJS,EAAiBhD,IAAM2C,SAAQ,WACnC,MAAO,CACLlB,UAAW,MACXC,SAAU,KACVH,aAAcsB,EAAaI,WAE5B,CAACJ,EAAaI,UAEXA,EAAUhC,EAAa,QAAS+B,GAQtC,OACE,cAACf,EAAWpB,SAAZ,CACEC,MAAO,CACL8B,QACAK,UACAJ,eACAV,mBACAC,sBACAG,iBACAC,oBACAH,wBACAC,2BACAY,WAlBa,WACjBV,EAAkB,IAClBJ,GAAoB,GACpBE,GAAyB,KAIzB,SAcGnC,ICrDP,IAAMgD,EAAgBC,IAAOC,IAAV,sNAYJ,SAASC,IAAY,IAAD,EACjC,EAEItD,IAAMyC,WAAW1C,GADnBjB,KAAQnC,EADV,EACUA,YAAasC,EADvB,EACuBA,SAEfiE,EAAelD,IAAMyC,WAAWR,GAAhCiB,WAER,OACE,eAACC,EAAD,WACE,gCACE,cAAC,IAAD,CAAQI,IAAKtE,EAAb,SACGA,EAAW,GAAH,OAAQtC,QAAR,IAAQA,GAAR,UAAQA,EAAa6G,OAAO,UAA5B,aAAQ,EAAwBC,gBAE3C,cAAC,IAAWC,KAAZ,CAAiBC,UAAU,WAA3B,SAAuChH,OAEzC,cAAC,IAAD,CACEiH,OAAK,EACL9D,QAAS,WAEPoD,IACArH,EAAKgI,WALT,yC,4BC5BEC,EAAUC,IAAVD,MAEFE,EAAcZ,YAAOU,EAAPV,CAAH,8OAkBXa,EAAab,YAAOjF,IAAW+F,KAAlBd,CAAH,uFAMD,SAASe,IACtB,MACEnE,IAAMyC,WAAWR,GADXW,EAAR,EAAQA,MAAOR,EAAf,EAAeA,oBAAqBI,EAApC,EAAoCA,kBAOpC,OACE,cAAC,IAAD,CAAUoB,OAAK,EAACQ,iBAAkB,CAAC,KAAnC,SACE,eAACJ,EAAD,CAAaK,OAAO,+BAApB,UACGzB,EAAMd,KAAI,SAACiB,GAAD,OACT,cAACkB,EAAD,CAA0BnE,QAAS,kBAAM0C,EAAkBO,EAAKf,KAAhE,SACGe,EAAKnG,MADSmG,EAAKf,OAIxB,cAAC,IAAD,CACEsC,KAAK,OACLC,KAAM,cAACC,EAAA,EAAD,IACNb,UAAU,WACV7D,QAhBc,WACpBsC,GAAoB,IAWhB,gCAN4C,OCpCpD,IAAMqC,EAAgBrB,IAAOC,IAAV,uFAMJ,SAASqB,IACtB,OACE,cAACD,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKhF,KAAM,GAAX,SACE,cAAC6D,EAAD,MAEF,cAAC,IAAD,CAAK7D,KAAM,GAAX,SACE,cAAC0E,EAAD,W,mFCfJhB,GAAgBC,IAAOC,IAAV,yPAmBnB,SAASsB,GAAWC,GAClB,IAAIC,EAAgB,GASpB,OAPID,IAGFC,GAFAA,EAAgBC,aAAe,IAAIC,KAAe,IAAVH,GAAiB,IAAIG,OAG7CvB,OAAO,GAAGC,cAAgBoB,EAAcG,MAAM,IAGzDH,EAGM,SAASI,GAAT,GAA8D,IAAD,EAA1CC,EAA0C,EAA1CA,KAAMvI,EAAoC,EAApCA,YAAaJ,EAAuB,EAAvBA,UAAW0C,EAAY,EAAZA,SAC9D,OACE,eAAC,GAAD,WACE,gCACE,cAAC,IAAD,CAAQkG,KAAK,QAAQ5B,IAAKtE,EAA1B,SACGA,EAAW,GAAH,OAAQtC,QAAR,IAAQA,GAAR,UAAQA,EAAa6G,OAAO,UAA5B,aAAQ,EAAwBC,gBAE3C,cAAC,IAAWC,KAAZ,CAAiBC,UAAU,SAA3B,SAAqChH,IACrC,cAAC,IAAW+G,KAAZ,CAAiBC,UAAU,OAA3B,SACGgB,GAAU,OAACpI,QAAD,IAACA,OAAD,EAACA,EAAWqI,cAG3B,8BACE,cAAC,IAAWlB,KAAZ,CAAiBC,UAAU,UAA3B,SAAsCuB,SCxC9C,IAAME,GAAehC,IAAOC,IAAV,2bA0BZgC,GAAoBjC,IAAOC,IAAV,wEAKjBF,GAAgBC,IAAOC,IAAV,gDAIbiC,GAAgBlC,IAAOC,IAAV,yJAQbkC,GAAanC,YAAOoC,KAAPpC,CAAH,sQAcVqC,GAAoBrC,IAAOC,IAAV,wEAKR,SAASqC,KACtB,MACEjD,qBAAWR,GADLY,EAAR,EAAQA,aAAcI,EAAtB,EAAsBA,QAASX,EAA/B,EAA+BA,yBAE/B,EAEIG,qBAAW1C,GADbjB,KAAQI,EADV,EACUA,IAAKD,EADf,EACeA,SAAUtC,EADzB,EACyBA,YAEzB,EAAoCyD,mBAAS,IAA7C,mBAAOuF,EAAP,KAAmBC,EAAnB,KACA,EAAeJ,KAAKK,UAAbC,EAAP,oBACMC,EAAWC,iBAAO,MAClBC,EAAiBD,iBAAO,MAMxBE,EAAiB,WACrB/J,EAAY,WAAY,CACtB+I,KAAMS,EACNzG,MACAD,WACAkH,OAAQtD,EAAab,GACrBrF,gBAGFmJ,EAAKM,YAAY,CAAC,aAGlB,OAAIL,QAAJ,IAAIA,OAAJ,EAAIA,EAAUM,UACZC,YAAW,WACTP,EAASM,QAAQE,YAKjBrF,EAAYlB,IAAM2C,SACtB,iBAAO,CACLlB,UAAW,SACXC,SAAU,KACVH,aAAcsB,EAAab,MAE7B,CAACa,EAAab,KAGVwE,EAAWvF,EAAa,WAAYC,GAU1C,OARAR,qBAAU,YAER,OAAIuF,QAAJ,IAAIA,OAAJ,EAAIA,EAAgBI,WAClBJ,EAAeI,QAAQI,UACrBR,EAAeI,QAAQK,aAAe,MAEzC,CAACF,IAGF,cAAC,GAAD,UACG3D,EAAab,GACZ,qCACE,eAACoD,GAAD,WACE,sBAAKzB,UAAU,eAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8Bd,EAAajG,OAC3C,sBAAM+G,UAAU,sBAAhB,SACGd,EAAa8D,iBAGlB,eAACtB,GAAD,WACE,cAAC,IAAD,CACEd,KAAM,cAACqC,GAAA,EAAD,IACNtC,KAAK,OACLxE,QAAS,kBAAMwC,GAAyB,IAH1C,sBAOA,cAAC,IAAOuE,MAAR,CAAc1B,KAAK,QAAQ2B,SAAU,EAArC,SACG7D,EAAQnB,KAAI,SAACiF,GAAD,eACX,cAAC,KAAD,CAASC,MAAOD,EAAOpK,YAAvB,SACE,cAAC,IAAD,CAAQ4G,IAAKwD,EAAO9H,SAApB,SACG8H,EAAO9H,SACJ,GADH,UAEG8H,EAAOpK,mBAFV,iBAEG,EAAoB6G,OAAO,UAF9B,aAEG,EAA+BC,iBAJEsD,EAAO/E,eAWxD,eAACsD,GAAD,WACE,cAACG,GAAD,CAAmBwB,IAAKhB,EAAxB,SACGO,EAAS1E,KAAI,SAACoF,GAAD,OACZ,cAACjC,GAAD,CAEEC,KAAMgC,EAAIhC,KACVjG,SAAUiI,EAAIjI,SACdtC,YAAauK,EAAIvK,YACjBJ,UAAW2K,EAAI3K,WAJV2K,EAAIlF,SAQf,eAACuD,GAAD,CAAYO,KAAMA,EAAlB,UACE,cAAC,KAAKqB,KAAN,CAAWvK,KAAK,UAAhB,SACE,cAAC,KAAD,CACEqK,IAAKlB,EACLqB,SA1FU,SAACC,GACzBzB,EAAcyB,EAAEC,OAAOxG,QA0FTyG,aAAcrB,EACdsB,YAAY,6BACZC,UAAU,EACVC,aAAa,UAGjB,cAAC,IAAD,CAAQpD,KAAK,UAAUxE,QAASoG,EAAhC,+BAON,cAAC,KAAD,CACEyB,QAAQ,4BACRrD,KAAK,OACLsD,UAAQ,EACRrI,MAAO,CAAEsI,OAAQ,GACjBC,UAAQ,MC3LH,SAASC,KACtB,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKtI,KAAM,EAAX,SACE,cAACiF,EAAD,MAEF,cAAC,IAAD,CAAKjF,KAAM,GAAX,SACE,cAACiG,GAAD,W,cCPK,SAASsC,KACtB,MAAkDvF,qBAAWR,GAArDE,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,oBAEhBlD,EACNuD,qBAAW1C,GADbjB,KAAQI,IAEV,EAAesG,KAAKK,UAAbC,EAAP,oBAoBA,OACE,8BACE,cAAC,KAAD,CACEkB,MAAM,oBACNiB,QAAS9F,EACT+F,KAvBW,WAGf/L,EAAY,QAAD,YAAC,eAAc2J,EAAKqC,kBAApB,IAAsClF,QAAS,CAAC/D,MAG3D4G,EAAKM,cAELhE,GAAoB,IAgBhBgG,SAbe,WAEnBtC,EAAKM,cAELhE,GAAoB,IAKlB,SAME,eAAC,KAAD,CAAM0D,KAAMA,EAAMuC,OAAO,WAAzB,UACE,cAAC,KAAKlB,KAAN,CAAWmB,MAAM,kBAAY1L,KAAK,OAAlC,SACE,cAAC,KAAD,CAAO4K,YAAY,gCAErB,cAAC,KAAKL,KAAN,CAAWmB,MAAM,gBAAQ1L,KAAK,cAA9B,SACE,cAAC,KAAM2L,SAAP,CAAgBf,YAAY,qC,qFCtCxC,SAASgB,GAAT,GAKI,IAJFC,EAIC,EAJDA,aAIC,IAHDC,uBAGC,MAHiB,IAGjB,EAFDC,EAEC,EAFDA,WACGC,EACF,mBAGD,EAAgCxI,oBAAS,GAAzC,mBAAOyI,EAAP,KAAiBC,EAAjB,KACA,EAA8B1I,mBAAS,IAAvC,mBAAO2I,EAAP,KAAgBC,EAAhB,KAEMC,EAAkBjJ,IAAM2C,SAAQ,WAWpC,OAAOuG,qBAVa,SAACpI,GACnBkI,EAAW,IACXF,GAAY,GAEZL,EAAa3H,EAAO6H,GAAYQ,MAAK,SAACC,GACpCJ,EAAWI,GACXN,GAAY,QAIaJ,KAC5B,CAACA,EAAiBD,EAAcE,IASnC,OAPA3I,IAAMU,WAAU,WACd,OAAO,WAELsI,EAAW,OAEZ,IAGD,cAAC,KAAD,yBACEK,cAAY,EACZC,cAAc,EACdC,SAAUN,EACVO,gBAAiBX,EAAW,cAAC,IAAD,CAAM1D,KAAK,UAAa,MAChDyD,GALN,aAOGG,EAAQjH,KAAI,SAAC2H,GAAD,eACX,eAAC,KAAOC,OAAR,CAA+B5I,MAAO2I,EAAI3I,MAAOkG,MAAOyC,EAAInB,MAA5D,UACE,cAAC,IAAD,CAAQnD,KAAK,QAAQ5B,IAAKkG,EAAIxK,SAA9B,SACGwK,EAAIxK,SAAW,GAAf,UAAoBwK,EAAInB,aAAxB,iBAAoB,EAAW9E,OAAO,UAAtC,aAAoB,EAAsBC,gBAF/C,WAIOgG,EAAInB,SAJSmB,EAAI3I,a,SAWjB6I,G,mFAAf,WAA6BC,EAAQjB,GAArC,SAAAhK,EAAA,+EACS7C,EACJM,WAAW,SACXoF,MAAM,WAAY,iBAFd,OAEgCoI,QAFhC,IAEgCA,OAFhC,EAEgCA,EAAQvK,eAC5CiC,QAAQ,eACRuI,MAAM,IACNC,MACAX,MAAK,SAACvH,GACL,OAAOA,EAASC,KACbC,KAAI,SAACC,GAAD,MAAU,CACbuG,MAAOvG,EAAI1F,OAAOM,YAClBmE,MAAOiB,EAAI1F,OAAO6C,IAClBD,SAAU8C,EAAI1F,OAAO4C,aAEtBnC,QAAO,SAAC2M,GAAD,OAAUd,EAAWoB,SAASN,EAAI3I,cAdlD,4C,sBAkBe,SAASkJ,KACtB,MAKIvH,qBAAWR,GAJbI,EADF,EACEA,sBACAC,EAFF,EAEEA,yBACAC,EAHF,EAGEA,eACAM,EAJF,EAIEA,aAEF,EAA0BzC,mBAAS,IAAnC,mBAAOU,EAAP,KAAcmJ,EAAd,KACA,EAAezE,KAAKK,UAAbC,EAAP,oBAyBA,OACE,8BACE,cAAC,KAAD,CACEkB,MAAM,oCACNiB,QAAS5F,EACT6F,KA5BW,WAEfpC,EAAKM,cACL6D,EAAS,IAGOnO,EAAGM,WAAW,SAAS2F,IAAIQ,GAEnC2H,OAAO,CACbjH,QAAQ,GAAD,mBAAMJ,EAAaI,SAAnB,YAA+BnC,EAAMgB,KAAI,SAACqI,GAAD,OAASA,EAAIrJ,aAG/DwB,GAAyB,IAiBrB8F,SAde,WAEnBtC,EAAKM,cACL6D,EAAS,IAET3H,GAAyB,IAUrB8H,gBAAgB,EALlB,SAOE,cAAC,KAAD,CAAMtE,KAAMA,EAAMuC,OAAO,WAAzB,SACE,cAACG,GAAD,CACE6B,KAAK,WACLzN,KAAK,cACL0L,MAAM,iCACNxH,MAAOA,EACP0G,YAAY,oCACZiB,aAAckB,GACdvC,SAAU,SAACkD,GAAD,OAAcL,EAASK,IACjC/K,MAAO,CAAEK,MAAO,QAChB+I,WAAY9F,EAAaI,gBCtGtBsH,OAjBf,WACE,OACE,cAAC,IAAD,UACE,cAACrK,EAAD,UACE,eAACgC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsI,UAAWhM,EAAOiM,KAAK,WAC9B,cAAC,IAAD,CAAOD,UAAWzC,GAAU0C,KAAK,SAEnC,cAACzC,GAAD,IACA,cAACgC,GAAD,YCPKU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDX,O","file":"static/js/main.da1fe6e7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBzvmJ2XkbqjTyBiz3VUBNkuW1gaxcD00M\",\n  authDomain: \"chat-app-e3e0b.firebaseapp.com\",\n  projectId: \"chat-app-e3e0b\",\n  storageBucket: \"chat-app-e3e0b.appspot.com\",\n  messagingSenderId: \"1003609281949\",\n  appId: \"1:1003609281949:web:3eb8076c670eaa4553cb74\",\n  measurementId: \"G-SX6QS5JYEF\"\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nif (window.location.hostname === 'localhost') {\n  // auth.useEmulator('http://localhost:9099');\n  // db.useEmulator('localhost', '8080');\n}\n\nexport { db, auth };\nexport default firebase;\n","import firebase, { db } from './config';\n\nexport const addDocument = (collection, data) => {\n  const query = db.collection(collection);\n\n  query.add({\n    ...data,\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n  });\n};\n\n// tao keywords cho displayName, su dung cho search\nexport const generateKeywords = (displayName) => {\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\n  const name = displayName.split(' ').filter((word) => word);\n\n  const length = name.length;\n  let flagArray = [];\n  let result = [];\n  let stringArray = [];\n\n  /**\n   * khoi tao mang flag false\n   * dung de danh dau xem gia tri\n   * tai vi tri nay da duoc su dung\n   * hay chua\n   **/\n  for (let i = 0; i < length; i++) {\n    flagArray[i] = false;\n  }\n\n  const createKeywords = (name) => {\n    const arrName = [];\n    let curName = '';\n    name.split('').forEach((letter) => {\n      curName += letter;\n      arrName.push(curName);\n    });\n    return arrName;\n  };\n\n  function findPermutation(k) {\n    for (let i = 0; i < length; i++) {\n      if (!flagArray[i]) {\n        flagArray[i] = true;\n        result[k] = name[i];\n\n        if (k === length - 1) {\n          stringArray.push(result.join(' '));\n        }\n\n        findPermutation(k + 1);\n        flagArray[i] = false;\n      }\n    }\n  }\n\n  findPermutation(0);\n\n  const keywords = stringArray.reduce((acc, cur) => {\n    const words = createKeywords(cur);\n    return [...acc, ...words];\n  }, []);\n\n  return keywords;\n};\n","import React from 'react';\nimport { Row, Col, Button, Typography } from 'antd';\nimport firebase, { auth } from '../../firebase/config';\nimport { addDocument, generateKeywords } from '../../firebase/services';\n\nconst { Title } = Typography;\n\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport default function Login() {\n  const handleLogin = async (provider) => {\n    const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n\n    if (additionalUserInfo?.isNewUser) {\n      addDocument('users', {\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL,\n        uid: user.uid,\n        providerId: additionalUserInfo.providerId,\n        keywords: generateKeywords(user.displayName?.toLowerCase()),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row justify='center' style={{ height: 800 }}>\n        <Col span={8}>\n          <Title style={{ textAlign: 'center' }} level={3}>\n            Fun Chat\n          </Title>\n          <Button\n            style={{ width: '100%', marginBottom: 5 }}\n            onClick={() => handleLogin(googleProvider)}\n          >\n            Đăng nhập bằng Google\n          </Button>\n          <Button\n            style={{ width: '100%' }}\n            onClick={() => handleLogin(fbProvider)}\n          >\n            Đăng nhập bằng Facebook\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/config';\nimport { Spin } from 'antd';\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider({ children }) {\n  const [user, setUser] = useState({});\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n\n  React.useEffect(() => {\n    const unsubscibed = auth.onAuthStateChanged((user) => {\n      if (user) {\n        const { displayName, email, uid, photoURL } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL,\n        });\n        setIsLoading(false);\n        history.push('/');\n        return;\n      }\n\n      // reset user info\n      setUser({});\n      setIsLoading(false);\n      history.push('/login');\n    });\n\n    // clean function\n    return () => {\n      unsubscibed();\n    };\n  }, [history]);\n\n  return (\n    <AuthContext.Provider value={{ user }}>\n      {isLoading ? <Spin style={{ position: 'fixed', inset: 0 }} /> : children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useState } from 'react';\nimport { db } from '../firebase/config';\n\nconst useFirestore = (collection, condition) => {\n  const [documents, setDocuments] = useState([]);\n\n  React.useEffect(() => {\n    let collectionRef = db.collection(collection).orderBy('createdAt');\n    if (condition) {\n      if (!condition.compareValue || !condition.compareValue.length) {\n        // reset documents data\n        setDocuments([]);\n        return;\n      }\n\n      // collectionRef.onSnapshot((snapshot) => {\n      //   const test = snapshot.docs.map((doc) => ({\n      //     ...doc.data(),\n      //     id: doc.id,\n      //   }));\n  \n      //   console.log(collection, {test})\n      // });\n\n      collectionRef = collectionRef.where(\n        condition.fieldName,\n        condition.operator,\n        condition.compareValue\n      );\n    }\n\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\n      const documents = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      setDocuments(documents);\n    });\n\n    return unsubscribe;\n  }, [collection, condition]);\n\n  return documents;\n};\n\nexport default useFirestore;\n","import React, { useState } from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { AuthContext } from './AuthProvider';\n\nexport const AppContext = React.createContext();\n\nexport default function AppProvider({ children }) {\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\n  const [selectedRoomId, setSelectedRoomId] = useState('');\n\n  const {\n    user: { uid },\n  } = React.useContext(AuthContext);\n\n  const roomsCondition = React.useMemo(() => {\n    return {\n      fieldName: 'members',\n      operator: 'array-contains',\n      compareValue: uid,\n    };\n  }, [uid]);\n\n  const rooms = useFirestore('rooms', roomsCondition);\n\n  const selectedRoom = React.useMemo(\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\n    [rooms, selectedRoomId]\n  );\n\n  const usersCondition = React.useMemo(() => {\n    return {\n      fieldName: 'uid',\n      operator: 'in',\n      compareValue: selectedRoom.members,\n    };\n  }, [selectedRoom.members]);\n\n  const members = useFirestore('users', usersCondition);\n\n  const clearState = () => {\n    setSelectedRoomId('');\n    setIsAddRoomVisible(false);\n    setIsInviteMemberVisible(false);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        rooms,\n        members,\n        selectedRoom,\n        isAddRoomVisible,\n        setIsAddRoomVisible,\n        selectedRoomId,\n        setSelectedRoomId,\n        isInviteMemberVisible,\n        setIsInviteMemberVisible,\n        clearState,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n}\n","import React from 'react';\nimport { Button, Avatar, Typography } from 'antd';\nimport styled from 'styled-components';\n\nimport { auth } from '../../firebase/config';\nimport { AuthContext } from '../../Context/AuthProvider';\nimport { AppContext } from '../../Context/AppProvider';\n\nconst WrapperStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 16px;\n  border-bottom: 1px solid rgba(82, 38, 83);\n\n  .username {\n    color: white;\n    margin-left: 5px;\n  }\n`;\n\nexport default function UserInfo() {\n  const {\n    user: { displayName, photoURL },\n  } = React.useContext(AuthContext);\n  const { clearState } = React.useContext(AppContext);\n\n  return (\n    <WrapperStyled>\n      <div>\n        <Avatar src={photoURL}>\n          {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\n        </Avatar>\n        <Typography.Text className='username'>{displayName}</Typography.Text>\n      </div>\n      <Button\n        ghost\n        onClick={() => {\n          // clear state in App Provider when logout\n          clearState();\n          auth.signOut();\n        }}\n      >\n        Đăng xuất\n      </Button>\n    </WrapperStyled>\n  );\n}\n","import React from 'react';\nimport { Collapse, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport { AppContext } from '../../Context/AppProvider';\n\nconst { Panel } = Collapse;\n\nconst PanelStyled = styled(Panel)`\n  &&& {\n    .ant-collapse-header,\n    p {\n      color: white;\n    }\n\n    .ant-collapse-content-box {\n      padding: 0 40px;\n    }\n\n    .add-room {\n      color: white;\n      padding: 0;\n    }\n  }\n`;\n\nconst LinkStyled = styled(Typography.Link)`\n  display: block;\n  margin-bottom: 5px;\n  color: white;\n`;\n\nexport default function RoomList() {\n  const { rooms, setIsAddRoomVisible, setSelectedRoomId } =\n    React.useContext(AppContext);\n\n  const handleAddRoom = () => {\n    setIsAddRoomVisible(true);\n  };\n\n  return (\n    <Collapse ghost defaultActiveKey={['1']}>\n      <PanelStyled header='Danh sách các phòng' key='1'>\n        {rooms.map((room) => (\n          <LinkStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}>\n            {room.name}\n          </LinkStyled>\n        ))}\n        <Button\n          type='text'\n          icon={<PlusSquareOutlined />}\n          className='add-room'\n          onClick={handleAddRoom}\n        >\n          Thêm phòng\n        </Button>\n      </PanelStyled>\n    </Collapse>\n  );\n}\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport UserInfo from './UserInfo';\nimport RoomList from './RoomList';\nimport styled from 'styled-components';\n\nconst SidebarStyled = styled.div`\n  background: #3f0e40;\n  color: white;\n  height: 100vh;\n`;\n\nexport default function Sidebar() {\n  return (\n    <SidebarStyled>\n      <Row>\n        <Col span={24}>\n          <UserInfo />\n        </Col>\n        <Col span={24}>\n          <RoomList />\n        </Col>\n      </Row>\n    </SidebarStyled>\n  );\n}\n","import React from 'react';\nimport { Avatar, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { formatRelative } from 'date-fns/esm';\n\nconst WrapperStyled = styled.div`\n  margin-bottom: 10px;\n\n  .author {\n    margin-left: 5px;\n    font-weight: bold;\n  }\n\n  .date {\n    margin-left: 10px;\n    font-size: 11px;\n    color: #a7a7a7;\n  }\n\n  .content {\n    margin-left: 30px;\n  }\n`;\n\nfunction formatDate(seconds) {\n  let formattedDate = '';\n\n  if (seconds) {\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\n\n    formattedDate =\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n  }\n\n  return formattedDate;\n}\n\nexport default function Message({ text, displayName, createdAt, photoURL }) {\n  return (\n    <WrapperStyled>\n      <div>\n        <Avatar size='small' src={photoURL}>\n          {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\n        </Avatar>\n        <Typography.Text className='author'>{displayName}</Typography.Text>\n        <Typography.Text className='date'>\n          {formatDate(createdAt?.seconds)}\n        </Typography.Text>\n      </div>\n      <div>\n        <Typography.Text className='content'>{text}</Typography.Text>\n      </div>\n    </WrapperStyled>\n  );\n}\n","import { UserAddOutlined } from '@ant-design/icons';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Tooltip, Avatar, Form, Input, Alert } from 'antd';\nimport Message from './Message';\nimport { AppContext } from '../../Context/AppProvider';\nimport { addDocument } from '../../firebase/services';\nimport { AuthContext } from '../../Context/AuthProvider';\nimport useFirestore from '../../hooks/useFirestore';\n\nconst HeaderStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 56px;\n  padding: 0 16px;\n  align-items: center;\n  border-bottom: 1px solid rgb(230, 230, 230);\n\n  .header {\n    &__info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    &__title {\n      margin: 0;\n      font-weight: bold;\n    }\n\n    &__description {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst ButtonGroupStyled = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst WrapperStyled = styled.div`\n  height: 100vh;\n`;\n\nconst ContentStyled = styled.div`\n  height: calc(100% - 56px);\n  display: flex;\n  flex-direction: column;\n  padding: 11px;\n  justify-content: flex-end;\n`;\n\nconst FormStyled = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px 2px 2px 0;\n  border: 1px solid rgb(230, 230, 230);\n  border-radius: 2px;\n\n  .ant-form-item {\n    flex: 1;\n    margin-bottom: 0;\n  }\n`;\n\nconst MessageListStyled = styled.div`\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nexport default function ChatWindow() {\n  const { selectedRoom, members, setIsInviteMemberVisible } =\n    useContext(AppContext);\n  const {\n    user: { uid, photoURL, displayName },\n  } = useContext(AuthContext);\n  const [inputValue, setInputValue] = useState('');\n  const [form] = Form.useForm();\n  const inputRef = useRef(null);\n  const messageListRef = useRef(null);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleOnSubmit = () => {\n    addDocument('messages', {\n      text: inputValue,\n      uid,\n      photoURL,\n      roomId: selectedRoom.id,\n      displayName,\n    });\n\n    form.resetFields(['message']);\n\n    // focus to input again after submit\n    if (inputRef?.current) {\n      setTimeout(() => {\n        inputRef.current.focus();\n      });\n    }\n  };\n\n  const condition = React.useMemo(\n    () => ({\n      fieldName: 'roomId',\n      operator: '==',\n      compareValue: selectedRoom.id,\n    }),\n    [selectedRoom.id]\n  );\n\n  const messages = useFirestore('messages', condition);\n\n  useEffect(() => {\n    // scroll to bottom after message changed\n    if (messageListRef?.current) {\n      messageListRef.current.scrollTop =\n        messageListRef.current.scrollHeight + 50;\n    }\n  }, [messages]);\n\n  return (\n    <WrapperStyled>\n      {selectedRoom.id ? (\n        <>\n          <HeaderStyled>\n            <div className='header__info'>\n              <p className='header__title'>{selectedRoom.name}</p>\n              <span className='header__description'>\n                {selectedRoom.description}\n              </span>\n            </div>\n            <ButtonGroupStyled>\n              <Button\n                icon={<UserAddOutlined />}\n                type='text'\n                onClick={() => setIsInviteMemberVisible(true)}\n              >\n                Mời\n              </Button>\n              <Avatar.Group size='small' maxCount={2}>\n                {members.map((member) => (\n                  <Tooltip title={member.displayName} key={member.id}>\n                    <Avatar src={member.photoURL}>\n                      {member.photoURL\n                        ? ''\n                        : member.displayName?.charAt(0)?.toUpperCase()}\n                    </Avatar>\n                  </Tooltip>\n                ))}\n              </Avatar.Group>\n            </ButtonGroupStyled>\n          </HeaderStyled>\n          <ContentStyled>\n            <MessageListStyled ref={messageListRef}>\n              {messages.map((mes) => (\n                <Message\n                  key={mes.id}\n                  text={mes.text}\n                  photoURL={mes.photoURL}\n                  displayName={mes.displayName}\n                  createdAt={mes.createdAt}\n                />\n              ))}\n            </MessageListStyled>\n            <FormStyled form={form}>\n              <Form.Item name='message'>\n                <Input\n                  ref={inputRef}\n                  onChange={handleInputChange}\n                  onPressEnter={handleOnSubmit}\n                  placeholder='Nhập tin nhắn...'\n                  bordered={false}\n                  autoComplete='off'\n                />\n              </Form.Item>\n              <Button type='primary' onClick={handleOnSubmit}>\n                Gửi\n              </Button>\n            </FormStyled>\n          </ContentStyled>\n        </>\n      ) : (\n        <Alert\n          message='Hãy chọn phòng'\n          type='info'\n          showIcon\n          style={{ margin: 5 }}\n          closable\n        />\n      )}\n    </WrapperStyled>\n  );\n}\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Sidebar from './Sidebar';\nimport ChatWindow from './ChatWindow';\n\nexport default function ChatRoom() {\n  return (\n    <div>\n      <Row>\n        <Col span={6}>\n          <Sidebar />\n        </Col>\n        <Col span={18}>\n          <ChatWindow />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Form, Modal, Input } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { addDocument } from '../../firebase/services';\nimport { AuthContext } from '../../Context/AuthProvider';\n\nexport default function AddRoomModal() {\n  const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\n  const {\n    user: { uid },\n  } = useContext(AuthContext);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // handle logic\n    // add new room to firestore\n    addDocument('rooms', { ...form.getFieldsValue(), members: [uid] });\n\n    // reset form value\n    form.resetFields();\n\n    setIsAddRoomVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n\n    setIsAddRoomVisible(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        title='Tạo phòng'\n        visible={isAddRoomVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form form={form} layout='vertical'>\n          <Form.Item label='Tên phòng' name='name'>\n            <Input placeholder='Nhập tên phòng' />\n          </Form.Item>\n          <Form.Item label='Mô tả' name='description'>\n            <Input.TextArea placeholder='Nhập mô tả' />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { debounce } from 'lodash';\nimport { db } from '../../firebase/config';\n\nfunction DebounceSelect({\n  fetchOptions,\n  debounceTimeout = 300,\n  curMembers,\n  ...props\n}) {\n  // Search: abcddassdfasdf\n\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = React.useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n\n      fetchOptions(value, curMembers).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [debounceTimeout, fetchOptions, curMembers]);\n\n  React.useEffect(() => {\n    return () => {\n      // clear when unmount\n      setOptions([]);\n    };\n  }, []);\n\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size='small' /> : null}\n      {...props}\n    >\n      {options.map((opt) => (\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\n          <Avatar size='small' src={opt.photoURL}>\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\n          </Avatar>\n          {` ${opt.label}`}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nasync function fetchUserList(search, curMembers) {\n  return db\n    .collection('users')\n    .where('keywords', 'array-contains', search?.toLowerCase())\n    .orderBy('displayName')\n    .limit(20)\n    .get()\n    .then((snapshot) => {\n      return snapshot.docs\n        .map((doc) => ({\n          label: doc.data().displayName,\n          value: doc.data().uid,\n          photoURL: doc.data().photoURL,\n        }))\n        .filter((opt) => !curMembers.includes(opt.value));\n    });\n}\n\nexport default function InviteMemberModal() {\n  const {\n    isInviteMemberVisible,\n    setIsInviteMemberVisible,\n    selectedRoomId,\n    selectedRoom,\n  } = useContext(AppContext);\n  const [value, setValue] = useState([]);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n\n    // update members in current room\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\n\n    roomRef.update({\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\n    });\n\n    setIsInviteMemberVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n\n    setIsInviteMemberVisible(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        title='Mời thêm thành viên'\n        visible={isInviteMemberVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n      >\n        <Form form={form} layout='vertical'>\n          <DebounceSelect\n            mode='multiple'\n            name='search-user'\n            label='Tên các thành viên'\n            value={value}\n            placeholder='Nhập tên thành viên'\n            fetchOptions={fetchUserList}\n            onChange={(newValue) => setValue(newValue)}\n            style={{ width: '100%' }}\n            curMembers={selectedRoom.members}\n          />\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import './App.css';\nimport Login from './components/Login';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport ChatRoom from './components/ChatRoom';\nimport AuthProvider from './Context/AuthProvider';\nimport AppProvider from './Context/AppProvider';\nimport AddRoomModal from './components/Modals/AddRoomModal';\nimport InviteMemberModal from './components/Modals/InviteMemberModal';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n        <AppProvider>\n          <Switch>\n            <Route component={Login} path='/login' />\n            <Route component={ChatRoom} path='/' />\n          </Switch>\n          <AddRoomModal />\n          <InviteMemberModal />\n        </AppProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}